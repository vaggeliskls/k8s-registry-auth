container-shared: &container-shared
  containers:
    - name: kubectl
      image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
      command:
        - "/bin/sh"
        - "-c"
        - |
          DOCKER_REGISTRY={{ .Values.global.registry }}
          AWS_ACCOUNT=$(echo $DOCKER_REGISTRY | cut -d"." -f1,1)
          AWS_REGION=$(echo $DOCKER_REGISTRY | cut -d"." -f4,4)
          AWS_DOCKER_USER=AWS
          AWS_DOCKER_PASSWORD=$(aws ecr get-login --region $AWS_REGION --registry-ids $AWS_ACCOUNT | cut -d' ' -f6)
          kubectl delete secret --namespace {{ .Release.Namespace }} {{ .Values.global.imagePullSecrets }} || true
          kubectl create secret --namespace {{ .Release.Namespace }} \
              docker-registry {{ .Values.global.imagePullSecrets }} \
              --docker-server=$DOCKER_REGISTRY \
              --docker-username=$AWS_DOCKER_USER \
              --docker-password=$AWS_DOCKER_PASSWORD
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.secretConfigName }}
              key: REGISTRY_USERNAME
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.secretConfigName }}
              key: REGISTRY_PASSWORD


apiVersion: batch/v1
kind: Job
metadata:
  name: aws-ecr-credentials-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 4
  template:
    spec:
      terminationGracePeriodSeconds: 600
      serviceAccountName: {{ .Release.Name }}-aws-ecr-service-account
      restartPolicy: OnFailure
      <<: *container-shared
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aws-ecr-cron-credentials-job
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "0 */8 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          terminationGracePeriodSeconds: 600
          serviceAccountName: {{ .Release.Name }}-aws-ecr-service-account
          restartPolicy: OnFailure
          <<: *container-shared